<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">  
 
    <!-- scan the package and the sub package -->
   <context:component-scan base-package="com"/>
    <!-- don't handle the static resource -->
    <mvc:default-servlet-handler />
 
    <!-- if you use annotation you must configure following setting -->
    <mvc:annotation-driven />
     
     
	<bean name="taskJob" class="com.wyj.sendMail.SendMailTask" />
 	<bean id="quartzTestJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="taskJob"></property>
        <property name="targetMethod" value="myExecutor"></property>
        <property name="concurrent" value="false"></property>
    </bean>
    <bean id="quartzTestTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="quartzTestJob"/>
        <!-- 每天五秒 -->
        <property name="cronExpression" value="0 0/30 8-18 * * ?"></property>
    </bean>
    <bean lazy-init="false"  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
    <property name="triggers">  
        <list>  
        <ref bean="quartzTestTrigger"/>  
        </list>  
    </property> 
    </bean>
     
    <!-- configure the InternalResourceViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
            id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>
    
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- set the max upload size100MB -->  
        <property name="maxUploadSize">  
            <value>104857600</value>  
        </property>  
        <property name="maxInMemorySize">  
            <value>4096</value>  
        </property>  
    </bean> 
    <bean id="propertyConfigurer"     
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">      
	    <property name="location" value="/WEB-INF/config.properties"/>      
	</bean>  
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc_url}</value>
        </property>
        <property name="username">
            <value>${jdbc_username}</value>
        </property>
        <property name="password">
            <value>${jdbc_password}</value>
        </property>
    </bean>
    
    <!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:mysql://127.0.0.1/test</value>
		</property>
		<property name="user">
			<value>root</value>
		</property>
		<property name="password">
			<value>root</value>
		</property>
		连接池中保留的最小连接数。
		<property name="minPoolSize">
			<value>5</value>
		</property>
		连接池中保留的最大连接数。Default: 15
		<property name="maxPoolSize">
			<value>30</value>
		</property>
		初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3
		<property name="initialPoolSize">
			<value>10</value>
		</property>
		最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0
		<property name="maxIdleTime">
			<value>60</value>
		</property>
		当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
		<property name="acquireIncrement">
			<value>5</value>
		</property>
		JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0
		<property name="maxStatements">
			<value>0</value>
		</property>
		每60秒检查所有连接池中的空闲连接。Default: 0
		<property name="idleConnectionTestPeriod">
			<value>60</value>
		</property>
		定义在从数据库获取新连接失败后重复尝试的次数。Default: 30
		<property name="acquireRetryAttempts">
			<value>30</value>
		</property>
		<property name="acquireRetryDelay">
			<value>100</value>
		</property>
		获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false
		<property name="breakAfterAcquireFailure">
			<value>false</value>
		</property>
		因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false
		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
	</bean> -->
	
		<!-- 配置Jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
		
</beans>